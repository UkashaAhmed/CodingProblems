My solution: 

class Solution {
    public int[] twoSum(int[] nums, int target) {
     int[]x= new int[2];
     for(int i =0;i<nums.length;i++){
        for(int j=i+1;j<nums.length;j++){
            if(nums[i]+nums[j]==target){
                x[0]=j;
                x[1]=i;
            }
        }
     }
             return x;

         }
}




Best Solution :


class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer, Integer> map = new HashMap<>(); // value -> index

        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];

            // Check if the complement exists in the map
            if (map.containsKey(complement)) {
                return new int[]{map.get(complement), i};
            }

            // Add current number to the map
            map.put(nums[i], i);
        }

        return new int[]{}; // No solution found (optional: throw exception)
    }
}
